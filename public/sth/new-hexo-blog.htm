<!DOCTYPE HTML>
<html>
<head>
  <meta charset="utf-8">
  
  <title>Migrate to Hexo | 破冰转身</title>
  <meta name="author" content="luRKer">
  
  <meta name="description" content="博客正式遷移到Hexo
緣起

徘徊于WordPress  迷茫于VPS

糾結選哪個blog framework安家 

猛然發現平台真的不重要 折騰的心應該focus于內容

希望得到舒適恬靜描描畫畫feelings （而不是臃腫擔心的後台admin）


目標

簡潔優美的書寫環境
輕鬆快捷的發佈服務端
意外極端情況的應急修復能力">
  
  
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

  <meta property="og:title" content="Migrate to Hexo"/>
  <meta property="og:site_name" content="破冰转身"/>

  
    <meta property="og:image" content="undefined"/>
  

  <link href="/favicon.ico" rel="icon">
  <link rel="alternate" href="/atom.xml" title="破冰转身" type="application/atom+xml">
  <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css" type="text/css">
<link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" type="text/css">
<link rel="stylesheet" href="/css/style.css" type="text/css">

  <script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
  <!--[if lt IE 9]><script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
  
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-54128333-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>

</head>

<body>
  <header id="header" class='normal_mode'>
    <nav id="main-nav">
  <ul class='container'>
    
      <li><a href="/">Home</a></li>
    
      <li><a href="/maths">Maths</a></li>
    
      <li><a href="/archives">Archives</a></li>
    
  </ul>
  <div class="clearfix"></div>
</nav>
  </header>
  <div id="content" class="container">
    <article class="post">
  
    <div class="gallery">
  <div class="photoset">
    
      <img src="">
    
  </div>
  <div class="control">
    <div class="prev"></div>
    <div class="next"></div>
  </div>
</div>
  
  <div class="post-content">
    <header>
      
      <time datetime="2014-08-25T09:03:49.000Z"><a href="/sth/new-hexo-blog.htm">Mon, Aug 25 2014, 5:03:49 pm</a></time>

  
    <h1 class="title">Migrate to Hexo</h1>
  



<div class="clear"></div>
      
    </header>
    <div class="entry">
      
        <h1 id="博客正式遷移到Hexo">博客正式遷移到Hexo</h1>
<h2 id="緣起">緣起</h2>
<ul>
<li><p>徘徊于WordPress  迷茫于VPS</p>
</li>
<li><p>糾結選哪個blog framework安家 </p>
</li>
<li><p>猛然發現平台真的不重要 折騰的心應該focus于內容</p>
</li>
<li><p>希望得到舒適恬靜描描畫畫feelings （而不是臃腫擔心的後台admin）</p>
</li>
</ul>
<h2 id="目標">目標</h2>
<ul>
<li>簡潔優美的書寫環境</li>
<li>輕鬆快捷的發佈服務端</li>
<li>意外極端情況的應急修復能力</li>
</ul>
<a id="more"></a>

<h2 id="擼起褲腿_思路+實現">擼起褲腿 思路+實現</h2>
<pre><code>本地測試環境 
(現有)OS:win7 64bit  text編輯器：notepad++
(即將搭建)
[<span class="link_label">git</span>](<span class="link_url">http://git-scm.com/ </span>) 
[<span class="link_label">node.js npm</span>](<span class="link_url">https://www.npmjs.org/</span>)
[<span class="link_label">hexo 基於node.js靜態博客生成處理工具</span>](<span class="link_url">http://hexo.io/</span>)

遠程服務端環境
支持靜態化html解析的Github Pages
</code></pre><h2 id="本地_local_environment_setup">本地 local environment setup</h2>
<p>1.win平台安裝git <a href="http://git-scm.com/downloads" target="_blank" rel="external">官方地址 下載安裝即可</a></p>
<p>2.本地安裝node.js <a href="http://nodejs.org/dist/v0.10.27/x64/node-v0.10.27-x64.msi" target="_blank" rel="external">node-v0.10.27-x64(選合適的版本)</a></p>
<p>3.安裝hexo <code>$ npm install hexo -g</code> 非常簡潔</p>
<p> <strong>至此，本地配置完成，搭好高樓大廈的骨架，要準備充實內容啦~</strong></p>
<h2 id="服務端_remote_environment_setup">服務端 remote environment setup</h2>
<p>4.開通github賬號 <a href="http://github.com" target="_blank" rel="external">官方註冊</a></p>
<p>5.新建repo 以xxxx.github.io命名的repository  <strong>建立pages的重要關鍵</strong></p>
<p> 至此，可以用<a href="https://github.com/xxxx/xxxx.github.io" target="_blank" rel="external">https://github.com/xxxx/xxxx.github.io</a> 訪問到新建的repo</p>
<p>（換言之確保 git clone <a href="https://github.com/xxxx/xxxx.github.io.git" target="_blank" rel="external">https://github.com/xxxx/xxxx.github.io.git</a> 可以正常）</p>
<p>6.打開剛剛的repo主頁，點擊項目的setting(URI直接進入)<a href="https://github.com/xxxx/xxxx.github.io/settings" target="_blank" rel="external">https://github.com/xxxx/xxxx.github.io/settings</a> 點擊Github Pages自動生成默認的頁面</p>
<p><strong>至此可以通過xxxx.github.io訪問默認頁面了</strong>（首次生效可能需要10min）</p>
<p><strong>切換回本地操作</strong></p>
<h2 id="0-利用ssh方式使用git">0.<strong>利用ssh方式使用git</strong></h2>
<ul>
<li><p>每次輸入賬號密碼簡直反人類</p>
</li>
<li><p>利用ssh更安全快捷</p>
</li>
<li><p>原理：客戶端生成的public key反饋回服務端得到認證 以後server-client通信就利用key匹配</p>
</li>
<li><p>媽媽再也不用擔心我輸入密碼啦~</p>
</li>
</ul>
<p>進入Git Bash命令行 輸入</p>
<pre><code>git config --global <span class="literal">user</span>.email <span class="string">"your@email.com"</span>
git config --global <span class="literal">user</span>.name <span class="string">"yourname"</span>
</code></pre><p>這兩步是設定客戶端的全局名稱和郵件信息（僅僅是標識作用 郵箱用戶名隨便填）</p>
<p><strong>生成秘鑰</strong></p>
<pre><code>ssh-keygen -t rsa -<span class="keyword">C</span> <span class="string">"your@email.com"</span>
</code></pre><p>一路按 Enter 確認 最後得到秘鑰</p>
<pre><code><span class="tag">Your</span> <span class="tag">identification</span> <span class="tag">has</span> <span class="tag">been</span> <span class="tag">saved</span> <span class="tag">in</span> <span class="tag">x</span>:\<span class="tag">x</span>\<span class="class">.ssh</span>\<span class="tag">id_rsa</span>
<span class="tag">Your</span> <span class="tag">public</span> <span class="tag">key</span> <span class="tag">has</span> <span class="tag">been</span> <span class="tag">saved</span> <span class="tag">in</span> <span class="tag">x</span>:\<span class="tag">x</span>\<span class="class">.ssh</span>\<span class="tag">id_rsa</span><span class="class">.pub</span>
<span class="tag">The</span> <span class="tag">key</span> <span class="tag">fingerprint</span> <span class="tag">is</span>:
<span class="tag">xx</span><span class="pseudo">:xx</span><span class="pseudo">:xx</span><span class="pseudo">:xx</span><span class="pseudo">:xx</span><span class="pseudo">:ab</span><span class="pseudo">:c1</span><span class="pseudo">:50</span><span class="pseudo">:10</span><span class="pseudo">:40</span><span class="pseudo">:0a</span><span class="pseudo">:ba</span><span class="pseudo">:c1</span><span class="pseudo">:xx</span><span class="pseudo">:xx</span><span class="pseudo">:xx</span> 
</code></pre><p>然後,用文本编辑器打开<strong>id_rsa.pub</strong>文件,拷贝其中的内容,将其添加到 <a href="https://github.com/settings/ssh" target="_blank" rel="external">官方Github add ssh key </a></p>
<p><strong>這一步目的是讓服務端認識客戶端 進行授權操作repo</strong>。</p>
<p>最後 執行命令</p>
<pre><code><span class="title">ssh</span> -T git<span class="variable">@github</span>.com
</code></pre><p>提示已經授權代表成功 告別https密碼登陸啦啦啦 （忽視warning）</p>
<h2 id="1-利用hexo初始化博客"><strong>1.利用hexo初始化博客</strong></h2>
<p>本地新建博客主目錄 例如blog</p>
<pre><code>hexo init <span class="tag">&lt;<span class="title">folder</span>&gt;</span>
</code></pre><p>完成<strong>主程序</strong>初始化 此時blog目錄應該create了很多文件 默認目錄結構</p>
<pre><code>├── node_modules
├── scaffolds
├── scripts
├── source
<span class="string">|   ├── _drafts</span>
<span class="string">|   └── _posts</span>
├── themes
├── _config.yml
└── package.json
</code></pre><p>根據程序默認配置 生成靜態博客文件</p>
<pre><code>hexo <span class="keyword">generate</span>
</code></pre><p>此時，主目錄下多了個子目錄 <code>public</code> 裡面就是整個博客的所有的靜態文件。</p>
<p>進行本地預覽調試 啟動本地服務器 默認4000端口</p>
<pre><code>hexo <span class="keyword">server</span>
</code></pre><p>現在通過 <code>https://localhost:40000</code> 就可以看到剛剛生成的博客了</p>
<p>但這<strong>僅僅</strong>是本地可以訪問 （我們必須把它發佈到服務器 看下文）</p>
<h2 id="2-發佈博客到Github_Pages服務器"><strong>2.發佈博客到Github Pages服務器</strong></h2>
<pre><code> <span class="built_in">cd</span>切換回博客的主目錄 前述的blog 
</code></pre><p><strong>思路</strong></p>
<ul>
<li><p>2.1先把遠程的repo clone到本地</p>
</li>
<li><p>2.2再刪除<strong>github默認的pages文件</strong></p>
</li>
<li><p>2.3上傳更新我們的新的博客靜態文件</p>
</li>
</ul>
<p><strong>2.1  先把遠程的repo clone到本地</strong></p>
<pre><code><span class="title">git</span> clone git<span class="variable">@github</span>.com:xxxx/xxxx.github.io.git
</code></pre><p><strong>2.2 再刪除github默認的pages文件</strong></p>
<pre><code>git rm -rf *
git <span class="operator"><span class="keyword">commit</span> -m <span class="string">'delete origin pages files'</span>
git push origin <span class="keyword">master</span></span>
</code></pre><p>到這裡 已經把原來的pages文件刪除 清空完 可以放新文件上去了</p>
<p><strong>2.3上傳更新我們的新的博客靜態文件</strong></p>
<p>hexo原生支持發佈到Github的遠程服務端，因而只需修改全局配置文件<code>_config.yml</code> 就可以方便更新Github Pages了</p>
<p>用notepad++打開<code>_config.yml</code> 修改</p>
<pre><code><span class="preprocessor"># Deployment</span>
<span class="preprocessor">## Docs: http://hexo.io/docs/deployment.html</span>
<span class="title">deploy</span>:
  <span class="typedef"><span class="keyword">type</span>: github</span>
  repo: git@github.com:xxxx/xxxx.github.io.git
  branch: master
</code></pre><p>更多<code>_config.yml</code> 修改 <a href="http://hexo.io/docs/" target="_blank" rel="external">看官方docs</a></p>
<p>最後 執行 <code>hexo deploy -g</code> 就成功發佈到Github Pages了</p>
<p><strong>驗證</strong></p>
<p>通過能訪問 <a href="http://xxxx.github.io" target="_blank" rel="external">xxxx.github.io</a> 即證明成功publish</p>
<p><strong>恭喜你 到現在終於把基本博客的最基本完成啦~（碼字君好累啊）</strong></p>
<h2 id="3-進階配置_advanced_settings">3.進階配置 advanced settings</h2>
<p><strong>3.1  hexo發佈過程全解析</strong>     </p>
<p><strong>理順過程</strong></p>
<ul>
<li><p>1.hexo new ‘hello-world’ 本地編寫文章</p>
</li>
<li><p>2.hexo generate 生成靜態</p>
</li>
<li><p>3.hexo server 打開本地服務端 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 調試</p>
</li>
<li><p>4.hexo deploy 發佈到遠端服務器</p>
</li>
</ul>
<p><strong>看清原理</strong>（對應上面過程來分析）</p>
<ul>
<li><p>1.hexo調用node.js生成.md文件 默認路徑<code>source\_posts\xx.md</code></p>
</li>
<li><p>2.hexo依據默認配置 生成靜態文件 默認生成在子目錄<code>public</code> 內</p>
</li>
<li><p>3.hexo利用web服務器開啟本地web服務</p>
</li>
<li><p>4.拷貝<code>public</code> 到<code>.deploy</code> 再執行git命令 讀取<code>_config.yml</code> 的deploy參數，<code>git add .</code> <code>git commit -m &#39;CommitMessage&#39;</code> <code>git push origin [branch]</code> </p>
</li>
</ul>
<p><strong>升華小結下</strong>  </p>
<p>1.直接在相應目錄建立文件,再deploy的效果和<code>hexo new new-post-article</code>一樣，<strong>eg.在<code>source\_posts</code>下直接新建<code>xx.md</code>文件等效于<code>hexo n xx</code> (新建pages同理)</strong> </p>
<p>2.<strong>手動執行<code>git add .</code> <code>git commit -m &#39;CommitMessage&#39;</code> <code>git push origin [branch]</code> 等效同理于<code>hexo deploy</code></strong> </p>
<p>故此 以後熟悉后直接變成<strong>兩個步驟</strong></p>
<pre><code>hexo <span class="keyword">new</span> <span class="string">'new-post-article'</span>
hexo d -g 
</code></pre><p>稍等服務端就生效（最長10min）   </p>
<p>hexo常用命令</p>
<pre><code>hexo <span class="variable">n =</span>= hexo new
hexo <span class="variable">g =</span>= hexo generate
hexo <span class="variable">s =</span>= hexo server
hexo <span class="variable">d =</span>= hexo deploy
</code></pre><h2 id="3-2_博客站點個性化_sites_customization">3.2 博客站點個性化 sites customization</h2>
<p><strong>3.2.1 global settings</strong></p>
<p>全局設置在博客主目錄下 （前例blog）的<code>_config.yml</code> 中<br>默認配置如下  更多查看<a href="http://hexo.io/docs/configuration.html" target="_blank" rel="external">官方docs</a> 挺全面的<br>主要修改：站點簡介、固定鏈接、默認目錄、主題theme選擇、發佈deploy方式等。</p>
<pre><code><span class="label">title:</span> Hexo
<span class="label">subtitle:</span>
<span class="label">description:</span>
<span class="label">author:</span> John Doe
<span class="label">email:</span>
<span class="label">language:</span>
<span class="label">url:</span> http://yoursite.com
<span class="label">root:</span> /
<span class="label">permalink:</span> :year/:month/:day/:title/
<span class="label">tag_dir:</span> tags
<span class="label">archive_dir:</span> archives
<span class="label">category_dir:</span> categories
<span class="label">code_dir:</span> downloads/code
<span class="label">new_post_name:</span> :title.md
<span class="label">default_layout:</span> post
<span class="label">auto_spacing:</span> false
<span class="label">titlecase:</span> false
<span class="label">filename_case:</span> <span class="number">0</span>
<span class="label">render_drafts:</span> false
<span class="label">post_asset_folder:</span> false
<span class="label">relative_link:</span> false
<span class="label">highlight:</span>
  enable: true
  line_number: true
  tab_replace:
<span class="label">default_category:</span> uncategorized
<span class="label">category_map:</span>
<span class="label">tag_map:</span>
<span class="label">archive:</span> <span class="number">2</span>
<span class="label">category:</span> <span class="number">2</span>
<span class="label">tag:</span> <span class="number">2</span>
<span class="label">port:</span> <span class="number">4000</span>
<span class="label">logger:</span> false
<span class="label">logger_format:</span>
<span class="label">date_format:</span> MMM D YYYY
<span class="label">time_format:</span> H:mm:ss
<span class="label">per_page:</span> <span class="number">10</span>
<span class="label">pagination_dir:</span> page
<span class="label">disqus_shortname:</span>
<span class="label">theme:</span> light
<span class="label">exclude_generator:</span>
<span class="label">deploy:</span>
  type:
</code></pre><p><strong>3.2.2 主題配色優化 theme customization</strong></p>
<p> 主目錄下子目錄 <code>theme</code> 為主題文件夾所在,而 <a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">官方hexo theme wiki參考</a>  童靴們也可以自己寫add進去</p>
<ul>
<li><p>找到合適的 copy進來就好 git clone也行 whatever u like</p>
</li>
<li><p>最後配置 <code>_config.yml</code> options中的<code>theme： 改為新主題名</code> (注意冒號：後面先加個space空格鍵 不然報錯)</p>
</li>
</ul>
<p><strong>3.2.3 添加插件 新建頁面</strong></p>
<p>添加插件</p>
<p><a href="http://hexo.io/docs/plugins.html" target="_blank" rel="external">官方說明不錯</a>  瞄瞄吧 碼字好苦啊~</p>
<p>添加頁面等</p>
<pre><code>hexo <span class="keyword">new</span> page <span class="string">'page-name'</span>
</code></pre><p><strong>3.2.4 添加自定義域名</strong></p>
<p>感謝開源程序與大家無私的精神 終於可以通過 <a href="http://xxxx.github.io" target="_blank" rel="external">http://xxxx.github.io</a> 訪問您的博客啦~~</p>
<p>however 這個在github.io下的子域名有點長或者不爽的</p>
<p>Github Pages支持用自定義域名  <code>萬惡的資本主義想得好周到嘛~</code></p>
<p><strong>兩種情況</strong></p>
<p><strong>1.有<code>example.com</code> 這樣的由頂級域名下的域名</strong>（叫一級域名？who knows）</p>
<ul>
<li><p>到repo目錄下新建 <code>CNAME</code> 文件，該文件只有一行，只需填 <code>example.com</code> </p>
</li>
<li><p>ping dig traceroute xxxx.github.io的ip 找最快最穩定的</p>
</li>
<li><p>到DNS服務商修改 <code>example.com</code> 的A 記錄指向 剛剛的ip</p>
</li>
<li><p>drink a cup of coffee and visit <a href="http://example.com" target="_blank" rel="external">http://example.com</a> Enjoy it!</p>
</li>
</ul>
<p><strong>2.有<code>abc.example.com</code> 的子域名</strong></p>
<ul>
<li><p>到repo目錄下新建 <code>CNAME</code> 文件，該文件只有一行，只需填 <code>abc.example.com</code> </p>
</li>
<li><p>到DNS服務商修改 <code>abc.example.com</code> 的CNAME 記錄指向 <code>abc.example.com</code> </p>
</li>
</ul>
<p><a href="https://help.github.com/articles/about-custom-domains-for-github-pages-sites" target="_blank" rel="external">more details!</a></p>
<p>To be continued (額 手抽筋啦)…..</p>
<p>PS:</p>
<p>long time no write something elegantly with pure purpose.</p>
<p>有問題歡迎留言哈 輕輕拍就好   LOL</p>

      
    </div>
    <footer>
      
          
<div class="bdsharebuttonbox" data-tag="share_1">
	<a class="bds_mshare" data-cmd="mshare"></a>
	<a class="bds_qzone" data-cmd="qzone" href="#"></a>
	<a class="bds_tsina" data-cmd="tsina"></a>
	<a class="bds_baidu" data-cmd="baidu"></a>
	<a class="bds_renren" data-cmd="renren"></a>
	<a class="bds_tqq" data-cmd="tqq"></a>
	<a class="bds_more" data-cmd="more">更多</a>
	<a class="bds_count" data-cmd="count"></a>
</div>

          <div class="clearfix"></div>
          <nav id="pagination">
  
  
  <div class="clearfix"></div>
</nav>
      
      <div class="clearfix"></div>
    </footer>
  </div>
</article>


<section id="comment">
  <h1 class="title">Comments</h1>

  
  <div id="disqus_thread">
    <noscript>Please enable JavaScript to view the <a href="//disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
  </div>
  
</section>



    <div class="clearfix"></div>
  </div>
  <footer id="footer" class="inner"><div>
  
  &copy; 2014 luRKer
  
</div>
Powered by <a href="http://hexo.io/" title="Hexo" target="_blank" rel="external">Hexo</a> and <a href="http://pages.github.com/" title="GitHub Pages" target="_blank" rel="external">GitHub Pages</a>

<div class="clearfix"></div></footer>
  
<script src="/js/jquery.imagesloaded.min.js" type="text/javascript"></script>
<script src="/js/gallery.js" type="text/javascript"></script>
<script src="//netdna.bootstrapcdn.com/bootstrap/3.1.0/js/bootstrap.min.js" type="text/javascript"></script>



<script type="text/javascript">
var disqus_shortname = 'lurker39';

(function(){
  var dsq = document.createElement('script');
  dsq.type = 'text/javascript';
  dsq.async = true;
  dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
}());
</script>



    <script type="text/javascript">
        (function(){

            $(window).scroll(function(){

                var scrollTop = $(window).scrollTop();
                if ( scrollTop >200 ){
                    $("#main-nav").removeClass('normal_mode').addClass('top_mode');
                } else{
                    $("#main-nav").removeClass('top_mode').addClass('normal_mode');
                }

            });

        })();
    </script>



  <link rel="stylesheet" href="/fancybox/jquery.fancybox.css" media="screen" type="text/css">
  <script src="/fancybox/jquery.fancybox.pack.js"></script>
  <script type="text/javascript">
  (function($){
    $('.fancybox').fancybox({
      'titlePosition': 'inside'
    });
  })(jQuery);
  </script>




<script type="text/javascript">
  
  $(function(){

    $('.title').hover(
      function() {      
        $(this).stop().animate(
          {'marginLeft': '10px'}, 200
        );   
      }, 
      function() {       
        $(this).stop().animate({'marginLeft': '0px'}, 200);      
      
    });   

  });

</script>


</body>
</html>